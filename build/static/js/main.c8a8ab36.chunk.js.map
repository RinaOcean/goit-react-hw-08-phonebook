{"version":3,"sources":["redux/auth/auth-selectors.js","redux/auth/auth-reducer.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","redux/auth/auth-operations.js","redux/contacts/contacts-reducer.js","redux/auth/auth-actions.js","redux/contacts/contacts-actions.js","components/Container/Container.jsx","components/MainNavigation/MainNavigation.jsx","components/AuthNavigation/AuthNavigation.jsx","imgs/monster-icon.png","components/UserMenu/UserMenu.js","components/AppBar/AppBar.jsx","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.js","redux/store.js","index.js"],"names":["getIsAuthenticated","state","auth","isLogedIn","getUserEmail","user","email","initialUserState","name","createReducer","registerSuccess","_","payload","loginSuccess","logoutSuccess","__","getCurrentUserSuccess","token","setError","error","registerError","loginError","logoutError","getCurrentUserError","combineReducers","getItems","contacts","items","getLoadingItems","loading","getFilterValue","filter","getFilteredContactList","createSelector","allContacts","normalizedFilter","toLocaleLowerCase","item","includes","fetchContacts","dispatch","a","fetchContactRequest","axios","get","data","fetchContactSuccess","fetchContactError","message","addContact","number","contact","addContactRequest","post","then","addContactSuccess","catch","addContactError","removeContact","contactID","removeContactRequest","delete","removeContactSuccess","removeContactError","defaults","baseURL","headers","common","Authorization","signup","credentials","registerRequest","response","login","loginRequest","logout","logoutRequest","getCurrentUser","getState","persistedToken","getCurrentUserRequest","id","addFilter","createAction","Container","children","className","connect","isAuthenticated","exact","to","activeClassName","AuthNavigation","mapDispatchToProps","onLogout","avatar","defaultAvatar","src","alt","width","type","onClick","Component","component","redirectTo","routeProps","render","props","restricted","HomePage","lazy","ContactsPage","LoginPage","RegisterPage","App","this","onGetCurrentUser","fetchItems","fallback","Spinner","path","isLoading","authPersistConfig","key","storage","whitelist","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8a8ab36.chunk.js","sourcesContent":["export const getIsAuthenticated = state => state.auth.isLogedIn;\r\n\r\nexport const getUserEmail = state => state.auth.user.email;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  // registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  // loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  // logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [logoutSuccess]: (_, __) => initialUserState,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: setError,\r\n  [loginError]: setError,\r\n  [logoutError]: setError,\r\n  [getCurrentUserError]: setError,\r\n});\r\n\r\nconst isLogedIn = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [registerError]: () => false,\r\n  [logoutError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n  [logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isLogedIn,\r\n  token,\r\n  error,\r\n});\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getItems = state => state.contacts.items;\r\n\r\nexport const getLoadingItems = state => state.contacts.loading;\r\n\r\nexport const getFilterValue = state => state.contacts.filter;\r\n\r\nexport const getFilteredContactList = createSelector(\r\n  [getItems, getFilterValue],\r\n  (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLocaleLowerCase();\r\n\r\n    return allContacts.filter(item =>\r\n      item.name.toLocaleLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from './contacts-actions';\r\n\r\n// axios.defaults.baseURL = 'http://localhost:3001';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest);\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error.message));\r\n  }\r\n};\r\n\r\nexport const addContact = ({ name, number }) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error.message)));\r\n};\r\n\r\nexport const removeContact = contactID => dispatch => {\r\n  dispatch(removeContactRequest());\r\n  axios\r\n    .delete(`/contacts/${contactID}`)\r\n    .then(() => dispatch(removeContactSuccess(contactID)))\r\n    .catch(error => dispatch(removeContactError(error.message)));\r\n};\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n} from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nexport const token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nexport const signup = credentials => async dispatch => {\r\n  dispatch(registerRequest());\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nexport const login = credentials => async dispatch => {\r\n  dispatch(loginRequest());\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nexport const logout = () => async dispatch => {\r\n  dispatch(logoutRequest());\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nexport const getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  addFilter,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [removeContactSuccess]: (state, { payload }) =>\r\n    state.filter(item => item.id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  // \"_\" заменяет неиспользуемый параметр(в данном случае state)\r\n  [addFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [removeContactRequest]: () => true,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const registerRequest = createAction('auth/registerRequest');\r\nexport const registerSuccess = createAction('auth/registerSuccess');\r\nexport const registerError = createAction('auth/registerError');\r\n\r\nexport const loginRequest = createAction('auth/loginRequest');\r\nexport const loginSuccess = createAction('auth/loginSuccess');\r\nexport const loginError = createAction('auth/loginError');\r\n\r\nexport const logoutRequest = createAction('auth/logoutRequest');\r\nexport const logoutSuccess = createAction('auth/logoutSuccess');\r\nexport const logoutError = createAction('auth/logoutError');\r\n\r\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const removeContactRequest = createAction(\r\n  'contacts/removeContactRequest',\r\n);\r\nexport const removeContactSuccess = createAction(\r\n  'contacts/removeContactSuccess',\r\n);\r\nexport const removeContactError = createAction('contacts/removeContactError');\r\n\r\nexport const addFilter = createAction('contacts/addFilter');\r\n","import PropTypes from 'prop-types';\r\nimport './Container.scss';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getIsAuthenticated } from '..//..//redux/auth/auth-selectors';\r\n\r\nconst MainNavigation = ({ isAuthenticated }) => (\r\n  <nav className=\"NavList\">\r\n    <NavLink exact to=\"/\" className=\"NavLink\" activeClassName=\"NavLink--active\">\r\n      Main\r\n    </NavLink>\r\n\r\n    {isAuthenticated && (\r\n      <NavLink\r\n        exact\r\n        to=\"/contacts\"\r\n        className=\"NavLink\"\r\n        activeClassName=\"NavLink--active\"\r\n      >\r\n        Contacts\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(MainNavigation);\r\n","import { NavLink } from 'react-router-dom';\r\n\r\nconst AuthNavigation = () => (\r\n  <nav className=\"NavList\">\r\n    <NavLink\r\n      exact\r\n      to=\"/login\"\r\n      className=\"NavLink\"\r\n      activeClassName=\"NavLink--active\"\r\n    >\r\n      Login\r\n    </NavLink>\r\n\r\n    <NavLink\r\n      exact\r\n      to=\"/register\"\r\n      className=\"NavLink\"\r\n      activeClassName=\"NavLink--active\"\r\n    >\r\n      Register\r\n    </NavLink>\r\n  </nav>\r\n);\r\n\r\nexport default AuthNavigation;\r\n","export default __webpack_public_path__ + \"static/media/monster-icon.5289c9b1.png\";","import { connect } from 'react-redux';\r\n\r\nimport { getUserEmail, logout } from '..//..//redux/auth';\r\n\r\nimport defaultAvatar from '..//..//imgs/monster-icon.png';\r\n\r\nimport './UserMenu.scss';\r\n\r\nconst UserMenu = ({ avatar, email, onLogout }) => (\r\n  <div className=\"UserMenu\">\r\n    <img className=\"AvatarImg\" src={avatar} alt=\"\" width=\"40\" />\r\n    <span className=\"User\">{email}</span>\r\n    <button type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  email: getUserEmail(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: logout,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import { connect } from 'react-redux';\r\n\r\nimport MainNavigation from '../MainNavigation';\r\nimport AuthNavigation from '../AuthNavigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\n\r\nimport { getIsAuthenticated } from '../../redux/auth';\r\n\r\nimport './AppBar.scss';\r\n\r\nconst AppBar = ({ isAuthenticated }) => {\r\n  return (\r\n    <header className=\"Header\">\r\n      <MainNavigation />\r\n\r\n      {isAuthenticated ? <UserMenu /> : <AuthNavigation />}\r\n    </header>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import { connect } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { getIsAuthenticated } from '..//..//redux/auth/auth-selectors';\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import { connect } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { getIsAuthenticated } from '..//..//redux/auth/auth-selectors';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense, lazy } from 'react';\nimport { Redirect, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Container from './components/Container';\nimport AppBar from './components/AppBar';\n// import MainPage from './pages/MainPage';\n// import ContactsPage from './pages/ContactsPage';\n// import LoginPage from './pages/LoginPage';\n// import RegisterPage from './pages/RegisterPage';\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport { fetchContacts } from './redux/contacts/contacts-operations';\nimport { getItems, getLoadingItems } from './redux/contacts/contacts-selectors';\nimport { getCurrentUser } from './redux/auth/auth-operations';\n\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport PublicRoute from './components//PublicRoute/PublicRoute';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nconst HomePage = lazy(() =>\n  import('./pages/MainPage' /* webpackChunkName: \"home-page\" */),\n);\nconst ContactsPage = lazy(() =>\n  import('./pages/ContactsPage' /* webpackChunkName: \"contacts-page\" */),\n);\nconst LoginPage = lazy(() =>\n  import('./pages/LoginPage' /* webpackChunkName: \"login-page\" */),\n);\nconst RegisterPage = lazy(() =>\n  import('./pages/RegisterPage' /* webpackChunkName: \"register-page\" */),\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n    this.props.fetchItems();\n  }\n\n  render() {\n    return (\n      <Container>\n        <AppBar />\n        <Suspense fallback={<Spinner />}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomePage} />\n            <PrivateRoute\n              path=\"/contacts\"\n              redirectTo=\"/login\"\n              component={ContactsPage}\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={LoginPage}\n            />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirectTo=\"/\"\n              component={RegisterPage}\n            />\n            <Redirect to=\"/\" />\n          </Switch>\n        </Suspense>\n      </Container>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  items: getItems(state),\n  isLoading: getLoadingItems(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchItems: () => dispatch(fetchContacts()),\n  onGetCurrentUser: () => dispatch(getCurrentUser()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReducer from './contacts';\r\nimport authReducer from './auth';\r\n\r\n// const contactsPersistConfig = {\r\n//   key: 'contacts',\r\n//   storage,\r\n//   blacklist: ['filter'],\r\n// };\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    // contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}